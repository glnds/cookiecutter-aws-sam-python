AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    {{ cookiecutter.project_name }}
    
    {{ cookiecutter.project_short_description }}

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Runtime: python3.6
        Timeout: 5
        MemorySize: 128
        AutoPublishAlias: live # More info about Safe Deployments: https://github.com/awslabs/serverless-application-model/blob/master/docs/safe_lambda_deployments.rst
        DeploymentPreference:
            Type: Canary10Percent5Minutes

Resources:
    LambdaOneFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            Handler: my_module/lambda_one.lambda_handler
            CodeUri: src/
            Tracing: Active
            Events:
                GetResource:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /rest/one
                        Method: get
            Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
                Variables:
                    PARAM1: VALUE

    # Sample policy to add additional permissions to your Lambda
    LambdaOneFunctionAdditionalPermission:
        Type: AWS::IAM::Policy
        Properties:
            PolicyName: root
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: Allow
                        Action: ssm:GetParameters
                        Resource: "*"
            Roles:
                - !Ref LambdaOneFunctionRole # Sample policy to demonstrate Implicit IAM Role created with SAM

    LambdaTwoFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            Handler: my_module/lambda_two.lambda_handler
            CodeUri: src/
            Tracing: Active
            Events:
                GetResource:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /rest/two
                        Method: get

Outputs:
    FirstApigwURL:
      Description: "API Gateway endpoint URL for Prod environment for First Function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/first/proxy"
    LambdaOneFunction:
      Description: "Lambda One Function ARN"
      Value: !GetAtt LambdaOneFunction.Arn
    LambdaTwoFunction:
      Description: "Lambda Two Function ARN"
      Value: !GetAtt LambdaTwoFunction.Arn
